{
	// Place your Nowy folder workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example (uncommented):
	"Print to console": {
                "scope": "javascript,typescript",
                "prefix": "log",
                "body": [
                        "console.log('$1');",
                        "$2"
                ],
                "description": "Log output to console"
	}
	
	///////////////////////////////////////////////////////////////////////////////
	// General file starters                                                   ///
	/////////////////////////////////////////////////////////////////////////////
	"File starter": {
		"scope": "*",
		"prefix": "startfile",
		"body": [
			"///////////////////////////////////////////////////////////////////////////////",
                        "///$2 ${1:TITLE} $2//",
                        "//===========================================================================//",
                        "//        Author: $3",
                        "//         Email: $4",
                        "//       Version: $5",
                        "//",
                        "//   Description: $6",
                        "//",
                        "// Creation date: ${7:dd}/${8:mm}/${9:yyyy}",
                        "//=============================== CHANGE LOG ================================//",
                        "/* [${7:dd}/${8:mm}/${9:yyyy}]        ${10:Author}",
                        "       ${0:Change description}*/",
			"///////////////////////////////////////////////////////////////////////////////"
		],
		"description": "General file header with change log."
	},
	"Change log entry": {
		"scope": "*",
		"prefix": "chlog",
		"body": [
			"//---------------------------------------------------------------------------//",
                        "/* [${1:dd}/${2:mm}/${3:yyyy}]        ${4:Author}",
                        "       ${0:Change description}*/",
		],
		"description": "Change log entry for general file header."
	},
	
	///////////////////////////////////////////////////////////////////////////////
	// NODE.JS application starter                                             ///
	/////////////////////////////////////////////////////////////////////////////
	"express body-parser": {
		"scope": "javascript",
		"prefix": "ebp",
		"body": [
			"const express = require(\"express\");",
			"${1:const bodyParser = require(\"body-parser\");}",
			"${2:const request = require(\"request\");}",
			"${3:const ejs = require(\"ejs\");}",
			"",
			"const app = express();",
			"",
			"${4:app.set('view engine', 'ejs');}",
			"",
			"${5:app.use(bodyParser.urlencoded({extended: true\\}));}",
			"${6:app.use(express.static(\"public\"));}",
			"",
			"const socket = process.env.PORT || ${7:3000}",
			"app.listen(socket, () => {",
			"    console.log(\"Application running on port \" + socket + \".\");",
			"});",
			"",
			"app.get(\"/\", (req, res) => {",
			"    res.send${8|(\"Application running on port \" + socket + \".\",File(__dirname + \"/app.html\"|});",
			"});",
			"",
			"$0"
		],
		"description": "Node JS API starter."
	},
	
	///////////////////////////////////////////////////////////////////////////////
	// EJS snippets                                                            ///
	/////////////////////////////////////////////////////////////////////////////
	"ejs script for": {
		"scope": "",
		"prefix": "ejs:for",
		"body": [
			"<% ${1:var}.forEach((e) => { %>",
			"    $0",
			"<% \\}) %>"
		],
		"description": "EJS <for> loop tag snippet"
	},
	"ejs script if": {
		"scope": "",
		"prefix": "ejs:if",
		"body": [
			"<% if ($1) { %>",
			"    $0",
			"<% \\} %>"
		],
		"description": "EJS <if> tag snippet"
	},
	"ejs include": {
		"scope": "",
		"prefix": "ejs:include",
		"body": [
			"<%- include(\"$0\") -%>"
		],
		"description": "EJS <include> tag snippet"
	},
	"ejs variation tag": {
		"scope": "",
		"prefix": "ejs:var",
		"body": "<%= $0 %>",
		"description": "EJS variation tag snippet"
	},
	
	///////////////////////////////////////////////////////////////////////////////
	// My comment blocks                                                       ///
	/////////////////////////////////////////////////////////////////////////////
	"HEADER 1 COMMENT JS": {
		"scope": "javascript",
		"prefix": "///",
		"body": [
			"///////////////////////////////////////////////////////////////////////////////",
			"// $0 ///",
			"/////////////////////////////////////////////////////////////////////////////"
		],
		"description": "Section header comment."
	},
	"HEADER 2 COMMENT JS": {
		"scope": "javascript",
		"prefix": "//",
		"body": [
			"/**$0**/",
			"/* $1 */",
			"/**$0**/"
		],
		"description": "Subsection header comment."
	},
	"HEADER COMMENT HTML": {
		"scope": "html",
		"prefix": "///",
		"body": [
			"<!----------------------------------------------------------------------------->",
			"<!-- $0 -->",
			"<!--------------------------------------------------------------------------->"
		],
		"description": "Section header comment."
	}
}
